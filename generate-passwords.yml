---
# Copyright (c) 2025 kk
#
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT

# Generate ELK Cluster Passwords
# Run this playbook to generate all required passwords

- name: Generate ELK Cluster Passwords
  hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    password_length: 16
    password_chars: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*"

  tasks:
    - name: Generate elastic user password
      set_fact:
        elasticsearch_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Generate kibana_system user password
      set_fact:
        kibana_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Generate logstash_system user password
      set_fact:
        logstash_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Generate beats_system user password
      set_fact:
        beats_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Generate monitoring_agent user password
      set_fact:
        monitoring_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Generate remote_monitoring_user password
      set_fact:
        remote_monitoring_password: "{{ lookup('password', '/dev/null length=' + password_length|string + ' chars=' + password_chars) }}"

    - name: Ensure passwords directory exists
      file:
        path: passwords
        state: directory
        mode: '0700'

    - name: Save passwords to vault files
      block:
        - name: Save elastic password to vault
          copy:
            content: "vault_elasticsearch_password: {{ elasticsearch_password }}"
            dest: "passwords/elastic_password.yml"
            mode: '0600'
          delegate_to: localhost

        - name: Save kibana_system password to vault
          copy:
            content: "vault_kibana_password: {{ kibana_password }}"
            dest: "passwords/kibana_password.yml"
            mode: '0600'
          delegate_to: localhost

        - name: Save logstash_system password to vault
          copy:
            content: "vault_logstash_password: {{ logstash_password }}"
            dest: "passwords/logstash_password.yml"
            mode: '0600'
          delegate_to: localhost

        - name: Save beats_system password to vault
          copy:
            content: "vault_beats_password: {{ beats_password }}"
            dest: "passwords/beats_password.yml"
            mode: '0600'
          delegate_to: localhost

        - name: Save monitoring_agent password to vault
          copy:
            content: "vault_monitoring_password: {{ monitoring_password }}"
            dest: "passwords/monitoring_password.yml"
            mode: '0600'
          delegate_to: localhost

        - name: Save remote_monitoring_user password to vault
          copy:
            content: "vault_remote_monitoring_password: {{ remote_monitoring_password }}"
            dest: "passwords/remote_monitoring_password.yml"
            mode: '0600'
          delegate_to: localhost

    # Encrypt the password files using ansible-vault
    - name: Encrypt password files
      command: "ansible-vault encrypt passwords/{{ item }}_password.yml --vault-password-file .vault_pass.txt"
      loop:
        - elastic
        - kibana
        - logstash
        - beats
        - monitoring
        - remote_monitoring
      args:
        chdir: "{{ playbook_dir }}"
      ignore_errors: yes # Ignore if .vault_pass.txt doesn't exist for first run
      when: ansible_check_mode is not defined or not ansible_check_mode

    - name: Display generated passwords
      debug:
        msg: |
          ========================================
          ELK Cluster Passwords Generated
          ========================================

          Elasticsearch (elastic): {{ elasticsearch_password }}
          Kibana (kibana_system): {{ kibana_password }}
          Logstash (logstash_system): {{ logstash_password }}
          Beats (beats_system): {{ beats_password }}
          Monitoring (monitoring_agent): {{ monitoring_password }}
          Remote Monitoring (remote_monitoring_user): {{ remote_monitoring_password }}

          ========================================
          Passwords saved to passwords/ directory
          Vault files encrypted and ready for deployment
          ========================================